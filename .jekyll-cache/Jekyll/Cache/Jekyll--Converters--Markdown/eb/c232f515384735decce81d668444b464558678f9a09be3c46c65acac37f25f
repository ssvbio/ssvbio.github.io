I"<p>Some times, for some obscure reason, you are asked to generate strings
of letters from a larger string with restriction on string size and
overlapping Window. For eg. You are asked to generate 3 letter
word/string from “<strong>Apple</strong>” with one alphabet overlap. From Apple, you
would be generationg, <strong>App</strong>, <strong>ppl</strong>, <strong>ple</strong> (one character overlap). You also
would like to put in a data fram for further manipulation. Here is an
example with radom letters of DNA code (ATCG).</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">print</span><span class="w"> </span><span class="p">(</span><span class="s2">"sting is ATCGATCGGGTTTAC"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>1] “sting is ATCGATCGGGTTTAC”</p>

<p>Now the requirement is to print 6 letter strings, with one letter
overlap. There are many ways to do it. Let us do it in a simple way.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">str_match_all</span><span class="p">(</span><span class="s2">"ATCGATCGGGTTTAC"</span><span class="p">,</span><span class="w"> </span><span class="s2">"(?=(.{6}))"</span><span class="p">)[[</span><span class="m">1</span><span class="p">]][,</span><span class="m">2</span><span class="p">]</span><span class="w">
</span></code></pre></div></div>

<p>[1] “ATCGAT” “TCGATC” “CGATCG” “GATCGG” “ATCGGG” “TCGGGT” “CGGGTT” “GGGTTT”
[9] “GGTTTA” “GTTTAC”</p>

<p>Now that we did this, this is temporary stop gap. Now let us make a
general function, where user would provide a character vector (with long
string), length of required of word and overlap window.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">seq</span><span class="o">=</span><span class="s2">"ATCGATCGGGTTTAC"</span><span class="w">
</span><span class="n">extract_kmers</span><span class="o">=</span><span class="k">function</span><span class="p">(</span><span class="n">Seq</span><span class="p">,</span><span class="n">Len</span><span class="p">,</span><span class="n">Wind</span><span class="p">){</span><span class="w">
	</span><span class="n">df</span><span class="o">=</span><span class="n">data.frame</span><span class="p">(</span><span class="n">kmer</span><span class="o">=</span><span class="n">str_sub</span><span class="p">(</span><span class="n">seq</span><span class="p">,</span><span class="n">seq</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="n">nchar</span><span class="p">(</span><span class="n">seq</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="n">Len</span><span class="m">-1</span><span class="p">),</span><span class="n">Len</span><span class="o">-</span><span class="n">Wind</span><span class="p">),</span><span class="n">seq</span><span class="p">(</span><span class="n">Len</span><span class="p">,</span><span class="n">nchar</span><span class="p">(</span><span class="n">seq</span><span class="p">),</span><span class="n">Len</span><span class="o">-</span><span class="n">Wind</span><span class="p">)))</span><span class="w">
</span><span class="nf">return</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Now let us extract 6 letter length (hexamers) words with one character
overlap</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">extract_kmers</span><span class="p">(</span><span class="n">seq</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">1</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>kmer
1 ATCGAT
2 TCGGGT</p>

<p>Now let us extract 6 letter length (hexamers) words with two character
overlap</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">extract_kmers</span><span class="p">(</span><span class="n">seq</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>kmer
1 ATCGAT
2 ATCGGG
3 GGTTTA</p>

<p>Now let us extract 6 letter length (hexamers) words with 5 character
overlap</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">extract_kmers</span><span class="p">(</span><span class="n">seq</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">5</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>kmer
1  ATCGAT
2  TCGATC
3  CGATCG
4  GATCGG
5  ATCGGG
6  TCGGGT
7  CGGGTT
8  GGGTTT
9  GGTTTA
10 GTTTAC</p>

<p>Now let us extract 8 letter length (hexamers) words with one character
overlap</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">extract_kmers</span><span class="p">(</span><span class="n">seq</span><span class="p">,</span><span class="m">8</span><span class="p">,</span><span class="m">2</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>kmer
1 ATCGATCG
2 CGGGTTTA</p>
:ET